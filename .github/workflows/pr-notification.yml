name: pr-notification

# https://github.com/slackapi/slack-github-action/issues/269
# https://github.com/ctriolo/action-post-or-update-slack-message-from-cache/

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - ready_for_review
      - closed
  pull_request_review:
    types:
      - submitted

permissions: read-all

defaults:
  run:
    shell: bash -euxo pipefail {0}

jobs:
  slack-notification:
    runs-on: ubuntu-latest
    name: Sends a message to Slack when a PR is opened
    if: (github.event.action == 'opened' && github.event.pull_request.draft == false) || github.event.action == 'ready_for_review'
    steps:
      - name: Post PR summary message to slack
        id: message
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "ðŸ’¡ *${{ github.event.pull_request.user.login }}*: <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}> (+${{ github.event.pull_request.additions }}, -${{ github.event.pull_request.deletions }})"

      - name: Save slack message timestamp to file
        run: |
          echo "${{ steps.message.outputs.ts }}" > slack-message-timestamp.txt

      - name: Cache slack message timestamp
        uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: slack-message-timestamp.txt
          key: slack-message-${{ github.event.pull_request.html_url }}

  slack-emoji-react:
    runs-on: ubuntu-latest
    name: Adds emoji reaction to slack message when a PR is closed or reviewed
    if: github.event.action == 'closed' || github.event.action == 'submitted'
    steps:
      - name: Read slack message timestamp from cache
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: restore-cache
        with:
          path: slack-message-timestamp.txt
          key: slack-message-${{ github.event.pull_request.html_url }}

      - name: Save slack timestamp as an environment variable
        if: steps.restore-cache.outputs.cache-hit == 'true'
        run: |
          echo "SLACK_TIMESTAMP=$(cat slack-message-timestamp.txt)" | tee -a "${GITHUB_ENV}"

      - name: Decide which emoji to add
        if: steps.restore-cache.outputs.cache-hit == 'true'
        run: |
          if [[ "${{ github.event.action }}" == "closed" ]]; then
            if [[ "${{ github.event.pull_request.merged }}" == "false" ]]; then
              echo "EMOJI=no-entry" >> "${GITHUB_ENV}"
            fi
          elif [[ "${{ github.event.action }}" == "submitted" ]]; then
            if [[ "${{ github.event.review.state }}" == "approved" ]]; then
              echo "EMOJI=white_check_mark" >> "${GITHUB_ENV}"
            elif [[ "${{ github.event.review.state }}" == "changes_requested" ]]; then
              echo "EMOJI=cross_mark" >> "${GITHUB_ENV}"
            elif [[ "${{ github.event.review.state }}" == "commented" ]]; then
              echo "EMOJI=speech_balloon" >> "${GITHUB_ENV}"
            fi
          fi

      - name: React to PR summary message in slack with emoji
        if: steps.restore-cache.outputs.cache-hit == 'true'
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          method: reactions.add
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            timestamp: "${{ env.SLACK_TIMESTAMP }}"
            name: ${{ env.EMOJI}}
